events {}

http {     
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;

    include mime.types;
    include /etc/nginx/conf.d/*.conf;

    limit_req_zone $binary_remote_addr zone=base:10m rate=100r/s;

    server {
        listen 80;
        server_name _;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name plausible.tophat.be;

        ssl_certificate /etc/letsencrypt/live/tophat.be/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tophat.be/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://localhost:1470;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
    	listen 443 ssl;
        server_name recaptcha.tophat.be;

        ssl_certificate /etc/letsencrypt/live/recaptcha.tophat.be/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/recaptcha.tophat.be/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

                if ($request_method = 'OPTIONS') {
                    add_header 'Access-Control-Allow-Origin' '*';
                    add_header 'Access-Control-Allow-Credentials' 'true';
                    add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
                    add_header 'Access-Control-Max-Age' 1728000;
                    add_header 'Content-Type' 'text/plain charset=UTF-8';
                    add_header 'Content-Length' 0;
                    return 204;
                }

            proxy_pass http://localhost:1342;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name groepvanroey.admin.tophat.be;
        limit_req zone=base burst=30 nodelay;

        ssl_certificate /etc/letsencrypt/live/admin.tophat.be/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/admin.tophat.be/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        root /app/static/html;

        location ~ ^/(?<section>projects|users|forms)$ {
            ssi on;
            auth_request /api/auth/verify-token;
            auth_request_set $redirect_path value;
            error_page 401 = @error401;

            try_files /index.html =404;
        }

        location ~ ^/projects/(.*)/(?<section>year)$ {
            ssi on;

            try_files /index.html =404;
        }

        location = /login {
            ssi on;
            
            auth_request /api/auth/verify-token;

            error_page 401 =200 /login.html;

            if ($upstream_http_authorization = "valid") {
                return 301 /projects;
            }
        }

        location ~ ^/projects/(.*) {
            ssi on;
            auth_request /api/auth/verify-token;
            error_page 401 = @error401;

            set $section 'project';
            set $project_id $1;
            set $args $args;

            try_files /index.html =404;
        }

        location = / {
            return 301 /projects;
        }

        location / {
            ssi on;   
        }

        location /auth {
            proxy_pass http://localhost:2407/auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            error_page 401 = @error401;
        }

        location ~* \.css$ {
            root /app/static/style;

            try_files $uri =404;
        }

        location ~* \.woff2$ {
            root /app/static/fonts;

            try_files $uri =404;
        }

        location ~* \.svg$ {
            root /app/static/icons;

            try_files $uri =404;
        }

        location ~* \.js$ {
            root /app/static/script;

            try_files $uri =404;
        }

        location /api/ {
            ssi on;
            auth_request /auth/verify-token;

            proxy_pass http://localhost:2407/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            error_page 401 = @error401;
        }

        location /api/auth/ {
            proxy_pass http://localhost:2407/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; 
        }

        location @error401 {
            return 301 /login;
        }
    }
}

